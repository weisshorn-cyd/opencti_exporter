# This is an example .goreleaser.yml file with some sensible defaults.
# Make sure to check the documentation at https://goreleaser.com

# The lines below are called `modelines`. See `:help modeline`
# Feel free to remove those if you don't want/need to use them.
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj

version: 2

before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod tidy
    # you may remove this if you don't need go generate
    - go generate ./...

builds:
  - env:
      - CGO_ENABLED=0
    ldflags:
      - -s -w -X github.com/weisshorn-cyd/opencti_exporter/version.Version={{.Version}}
    goos:
      - linux
      - darwin
    goarch:
      - amd64
      - arm64
    mod_timestamp: "{{ .CommitTimestamp }}"
    ignore:
      - goos: darwin
        goarch: amd64
      - goos: darwin
        goarch: arm64
      - goos: linux
        goarch: arm64

dockers:
  - use: buildx
    dockerfile: Dockerfile
    goos: linux
    goarch: amd64
    ids:
      - opencti_exporter
    image_templates:
      - "ghcr.io/weisshorn-cyd/opencti-exporter:latest"
      - "ghcr.io/weisshorn-cyd/opencti-exporter:{{ .Tag }}"
    build_flag_templates:
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--platform=linux/amd64"

  - use: buildx
    dockerfile: Dockerfile
    goos: linux
    goarch: arm64
    ids:
      - opencti_exporter
    image_templates:
      - "ghcr.io/weisshorn-cyd/opencti-exporter:latest"
      - "ghcr.io/weisshorn-cyd/opencti-exporter:{{ .Tag }}"
    build_flag_templates:
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--platform=linux/arm64"

archives:
  - format: tar.gz
    # this name template makes the OS and Arch compatible with the results of `uname`.
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}

changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"
